/*
	
  ******************************************************************************
  * @file 			( фаил ):   OneButton.h
  * @brief 		( описание ):  	обработка нажатия кнопок
  ******************************************************************************
  * @attention 	( внимание ):	для получения текущего кол-ва миллисекунд
								прошедших со старта MCU исползуем HAL_GetTick()							
  ******************************************************************************
  
*/

#ifndef _ONE_BUTTON_H
#define _ONE_BUTTON_H
		
#ifdef __cplusplus
extern "C" {
#endif

/* Includes ----------------------------------------------------------*/

// Обязательно нужен #include "main.h" 
// чтоб отдельно не подключать файлы связанные с МК и стандартными библиотеками
#include "main.h"


/* Define-------------------------------------------------------------*/
#define DEBOUNCE_TICKS		50 		// количество тиков за время отката.
#define CLICK_TICKS			600  	// количество тактов, которые должны пройти, прежде чем будет обнаружен клик.
#define PRESS_TICKS			1000 	// количество тиков, которые должны пройти, прежде чем будет обнаружено долгое нажатие кнопки
	
/* Struct prototypes -------------------------------------------------*/
/*
	******************************************************************************
	* @brief	 ( описание ):  стркутура для создания псевдо объектов кнопок
	******************************************************************************
*/
typedef struct oneButton{
	
	uint8_t state;				// храним текущий статус режима	нажатия
	uint32_t startTime; 		// время первого нажатия кнопки
	uint32_t stopTime; 			// время отпускания кнопки
	uint8_t isLongPressed;		// храним длинное нажатие
		
	void (*clickFunc)(void);			// указатель на функцию которую вызовим при однократном нажатии
	void (*doubleClickFunc)(void);		// указатель на функцию которую вызовим при двойном клике
	void (*longPressStartFunc)(void);	// указатель на функцию которую вызовим при старте зажатия и удержания
	void (*longPressStopFunc)(void);	// указатель на функцию которую вызовим при отпускании зажатия и удержания
	void (*duringLongPressFunc)(void);	// указатель на функцию которую вызовим в момент удержания при длинном удержании 
		
}oneButton;

/* Functions prototypes ----------------------------------------------*/
/*
	******************************************************************************
	* @brief	 ( описание ):  функция которую вызываем постоянно в while(1)
	* @param	( параметры ):	первый ссылка на обьявленую структуру ( псевдо объект )
								второй логическое значение кнопки ( чтение пина кнопки )
								при истене считает что кнопка нажата при ложь кнопка не нажата
	* @return  ( возвращает ):	
	******************************************************************************
*/
void tickOneButton(oneButton *button, uint8_t activeLevel);


#ifdef __cplusplus
}
#endif

#endif	/* _ONE_BUTTON_H */

/************************ (C) COPYRIGHT GKP *****END OF FILE****/
